services:
  app:
    build: .
    container_name: go_app
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - ORCHESTRATION_QUEUE=orchestration_queue
      - PRODUCT_QUEUE=products_queue
      - MONGO_URL=mongodb://mongodb:27017/inventory
      - CATEGORY_COLLECTION=categories
      - PRODUCT_COLLECTION=products
      - TRANSACTION_COLLECTION=transactions
    ports:
      - "9292:9292"
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ['CMD-SHELL', 'rabbitmqctl node_health_check']
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: '30s'
    networks:
      - app-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia


  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  rabbitmq_data: