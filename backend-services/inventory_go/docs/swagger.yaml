definitions:
  payloads.CreateCategoryPayload:
    properties:
      name:
        type: string
      parent_id:
        type: string
    required:
    - name
    type: object
  payloads.CreateProductPayload:
    properties:
      category_id:
        type: string
      description:
        type: string
      image:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
      vendor_id:
        type: string
    required:
    - name
    - price
    - stock
    - vendor_id
    type: object
  payloads.UpdateCategoryPayload:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  payloads.UpdateDescriptionPayload:
    properties:
      description:
        type: string
    required:
    - description
    type: object
  payloads.UpdateImagePayload:
    properties:
      description:
        type: string
    required:
    - description
    type: object
  payloads.UpdatePricePayload:
    properties:
      price:
        type: number
    required:
    - price
    type: object
  payloads.UpdateProductNamePayload:
    properties:
      name:
        type: string
    required:
    - name
    type: object
info:
  contact: {}
paths:
  /category:
    get:
      description: Retrieves all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Creates a category with a unique name and optional parent
      parameters:
      - description: Category payload
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/payloads.CreateCategoryPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new category
      tags:
      - categories
  /category/{id}:
    delete:
      description: Deletes a category by ID if no subcategories exist
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a category
      tags:
      - categories
    get:
      description: Retrieves a category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get a category
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Updates the name of a category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: New name
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payloads.UpdateCategoryPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Rename an existing category
      tags:
      - categories
  /category/{id}/subcategories:
    get:
      description: Retrieves direct subcategories for a given category ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List subcategories
      tags:
      - categories
  /category/parents:
    get:
      description: Retrieves categories without a parent
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List root categories
      tags:
      - categories
  /category/tree:
    get:
      description: Retrieves the full category tree
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Category tree
      tags:
      - categories
  /product:
    get:
      description: Retrieves all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Creates a product with optional category assignment
      parameters:
      - description: Product payload
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/payloads.CreateProductPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new product
      tags:
      - products
  /product/{id}:
    delete:
      description: Removes a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a product
      tags:
      - products
    get:
      description: Retrieves a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get a product
      tags:
      - products
  /product/category/{category}:
    get:
      description: Retrieves products by category ID
      parameters:
      - description: Category ID
        in: path
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: List products in a category
      tags:
      - products
  /product/description/{id}:
    put:
      consumes:
      - application/json
      description: Changes the description of a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: New description
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payloads.UpdateDescriptionPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update product description
      tags:
      - products
  /product/image/{id}:
    put:
      consumes:
      - application/json
      description: Updates the image URL of a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Image URL
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payloads.UpdateImagePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update product image
      tags:
      - products
  /product/many/{name}:
    get:
      description: Finds products matching a partial name
      parameters:
      - description: Partial name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Search products by name
      tags:
      - products
  /product/name/{id}:
    put:
      consumes:
      - application/json
      description: Renames a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: New name
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payloads.UpdateProductNamePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update product name
      tags:
      - products
  /product/price/{id}:
    put:
      consumes:
      - application/json
      description: Changes the price of a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: New price
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/payloads.UpdatePricePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update product price
      tags:
      - products
  /product/stock/{id}:
    get:
      description: Retrieves stock level for a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get product stock
      tags:
      - products
swagger: "2.0"
